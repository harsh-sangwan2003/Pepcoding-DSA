#include <iostream>
#include <math.h>
using namespace std;
#define EP 0.00001
// An example function whose solution is determined using
// Bisection Method. The function is x^3 - x^2 + 2


// double solution(double x) {
//   return x*x*x - x*x + 2;
// }

double solution(double x, double a[], int n) {
    double fx = 0;
    for(int i=0; i<= n; i++) {
        if(a[i] != 0){
            fx += a[i] * pow(x, i);
        }
    }
    return fx;
}
// Prints root of solution(x) with error in EPSILON
void bisection(double a, double b, double arr[], int n) {
   if (solution(a, arr, n) * solution(b, arr, n) >= 0) {
      cout << "You have not assumed right a and b\n";
      return;
   }
   double c = a;
   while ((b-a) >= EP) {
      // Find middle point
      c = (a+b)/2;
      // Check if middle point is root
      if (solution(c, arr, n) == 0.0)
         break;
         
       // Decide the side to repeat the steps
      else if (solution(c, arr, n)*solution(a, arr, n) < 0)
         b = c;
         
      else
         a = c;
   }
   cout << "The value of root is : " << c;
}
 // main function
int main() {
   double a = -500, b = 100;
   int n;
   
   cout<<"Enter the highest degree: ";
   cin>>n;
   double coef[n+1];
   for(int i=0; i<= n; i++){
       cout<<"Enter the coefficient of x^"<<(n-i)<<"th degree ";
       cin>>coef[n-1];
   }
   bisection(a, b, coef, n);
   return 0;
}